
var cart = {
addButton :     document.getElementById('addNewTask'),
newTask    :    document.getElementById('addItem'),
incompleteTask: document.getElementById('incompletedList'),
completedTask:  document.getElementById('completedList'),


addTask :       function (){
                // var list = this.createNewItem();
                // incompleteTask.appendChild('list');
                },

/*
when the click item is clicked then the create item runs

create item will create a li label and a checkbox

it the chekcbox is clicked it will got to the completedList if it is unchecked it will go 
to the incomplete list. item.        
// incompleted :   function (){
//                     console.log("checked");
//                 },

// completed :     function () {
//                     console.log("unchecked");
//                 } ,
       
// //cycle thru the complete and incomplete ul

// taskEvents : function(checkboxEvent, listItem){
               

//                 //to know the checked item.
//    },

// for (var i=0; i < this.incompleteTask.children.length; i++){
//      this.taskEvents(this.incompleteTask.children[i] , this.completed);
//     }

// for (var i=0; i < this.incompleteTask.children.length; i++){
//      this.taskEvents(this.incompleteTask.children[i] , this.incomplete);
//     }    
/*createNewItem: function(userItem) {
    var newList, newInput, newContent;
    
    newList = document.createElement('li');

    newInput = document.createElement('input');

    newInput.type = checkbox;

    newList.appendChild(newInput);

    newContent = document.createTextNode(userItem);

    newList.appendChild(newContent);

    this.AddNewItemToAddedList(newList);

    this.addedCycle();

    this.newItem.value = "";
  },



*/
var taskInput = document.getElementById("new-task");
var addButton = document.getElementById();
var incompletedTasksHolder= document.getElementById('incompleteTask');
var CompletedTaskHolder = document.getElementById('completedTask');


var addTask = function(){




}

var editTask =function(){

}

var deleteTask = function(){

}


var taskCompleted = function() {
	var listItem = this.parentNode;
	completedTasksHolder.appendChild(listItem);
	bindTaskEvents(listItem,taskIncompleted);
}

var TaskIncomplete = function(){
	var listItem = this.parentNode;
	incompletedTasksHolder.appendChild(listItem);
	bindTaskEvents(listItem,taskCompleted)

}

var bindTaskEvents = function (taskListItem, checkBoxEventHandler){
	
	var checkBox = taskListItem.querySelector("input[type=checkbox]");

}


working

var cart = {
addButton :     document.getElementById('addNewTask'),
newTask    :    document.getElementById('addItem'),
incompleteTask: document.getElementById('incompletedList'),
completedTask:  document.getElementById('completedList'),
listItem :          "",
// confirmEntry:   function () {
//                 var userItem = value.replace(/^\s+/, '').replace(/\s+$/, '');
//                 if (user)    
validate :  function (item){

if (item.trim()===""){
    alert('ERROR');
}else {
    return item;
}
},

//                 }

createNewItem: function() {
          //          console.log(this.newTask.value);
                var list = document.createElement('li');
                var checkbox = document.createElement('input');
                    checkbox.setAttribute('type', 'checkbox');
                var label = document.createTextNode(this.newTask.value);
                 
                list.appendChild(checkbox);
                list.appendChild(label);
                return list;

                },

addItem :        function() {
                   var item = this.newTask.value;
                   console.log(item); 
                   if (this.validate(item)) {
                   var listItem = this.createNewItem(item);
                   this.incompleteTask.appendChild(listItem);
                   this.listItem= listItem;
                   return this.listItem;
                   }
                   return false;
                },

 bindTaskEvents : function (taskListItem, checkBoxEventHandler){
    
                var checkBox = taskListItem.querySelector("input[type=checkbox]");
                checkBox.onclick = checkBoxEventHandler;
                console.log(checkBox);
},

 taskCompleted :function() {
                var listItem = this.parentNode;
                // console.log(this.completedTask);
                cart.completedTask.appendChild(listItem);
                cart.bindTaskEvents(listItem, cart.taskIncomplete);
},

taskIncomplete : function(){
                var listItem = this.parentNode;
                cart.incompleteTask.appendChild(listItem);
                cart.bindTaskEvents(listItem, cart.taskCompleted);

},

};

/*================================
EVENT HANDLERS
================================*/
cart.addButton.addEventListener('click', function(e){
    e.preventDefault();
    cart.addItem();} , false);

for (var i = 0; i < cart.incompleteTask.children.length; i++) {
    cart.bindTaskEvents(cart.incompleteTask.children[i], cart.taskCompleted);
};

for (var i = 0; i < cart.completedTask.children.length; i++) {
    cart.bindTaskEvents(cart.completedTask.children[i], cart.taskIncomplete);

};